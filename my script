-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local lp = Players.LocalPlayer
local chr = lp.Character or lp.CharacterAdded:Wait()
local hum = chr:WaitForChild("Humanoid")

-- Flags
local isEnabled = false
local isRunning = true

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SkyBypassUI"
screenGui.ResetOnSpawn = false
screenGui.Enabled = false
screenGui.Parent = lp:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 240, 0, 60)
frame.Position = UDim2.new(0.5, -120, 0.5, -30)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 180, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 16
toggleButton.Text = "Sky: Disabled"
toggleButton.Parent = frame

-- Close (X) Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Position = UDim2.new(1, -30, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 16
closeButton.Text = "X"
closeButton.Parent = frame

-- Toggle Button Function
toggleButton.MouseButton1Click:Connect(function()
	isEnabled = not isEnabled
	toggleButton.Text = isEnabled and "Sky: Enabled" or "Sky: Disabled"
	toggleButton.BackgroundColor3 = isEnabled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
end)

-- Close Button Function
closeButton.MouseButton1Click:Connect(function()
	isRunning = false
	screenGui:Destroy()
end)

-- M Key to toggle UI visibility
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if not gameProcessed and input.KeyCode == Enum.KeyCode.M then
		screenGui.Enabled = not screenGui.Enabled
	end
end)

-- Function to check if a position is valid and in the sky (avoid objects and other players)
local function isValidSkyPosition(pos)
	local region = Region3.new(pos - Vector3.new(1, 1, 1), pos + Vector3.new(1, 1, 1))
	local parts = Workspace:FindPartsInRegion3(region, nil, math.huge)
	return #parts == 0  -- Ensure no parts are touching the position
end

-- Sky teleport loop with random movement in the air
task.spawn(function()
	local lastPos = Vector3.new()  -- Initial last position

	while isRunning do
		task.wait(0.2)

		-- Only execute if Sky mode is enabled and health is below 25
		if not isEnabled or not hum or hum.Health > 25 then continue end

		local hrp = chr:FindFirstChild("HumanoidRootPart")
		if hrp then
			local currentPos = hrp.Position
			local rot = hrp.CFrame - hrp.Position

			-- Sky height - position the character high in the air (adjustable)
			local skyHeight = 10  -- Keeping the character 10 studs above the ground
			local targetPos = Vector3.new(currentPos.X, skyHeight, currentPos.Z)

			-- Apply small random increments to make spazzing movements in the sky
			local moveIncrement = Vector3.new(math.random(-1, 1), 0, math.random(-1, 1))  -- Small random movements for X and Z axes
			local newPos = targetPos + moveIncrement

			-- Check if the position is valid in the sky (no collision with parts)
			if isValidSkyPosition(newPos) then
				-- Apply smooth movement to the new position in the sky
				chr:PivotTo(CFrame.new(newPos))
			end
		end
	end
end)

-- Character reset handler
lp.CharacterAdded:Connect(function(newChar)
	chr = newChar
	hum = chr:WaitForChild("Humanoid")
end)
